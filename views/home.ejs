<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/movieCard.css" />
    <link rel="stylesheet" href="/styles/global.css" />
    <title>MOovi</title>
</head>
<body>
    <%- include('components/header') %>
    <main class="main">
        <section class="genre-section" id="movies-section">
            <h2>Filmes</h2>
            <div class="carousel-container">
                <button class="carousel-arrow left" onclick="scrollCarousel('movies-carousel', -300)">&#10094;</button>
                <div class="carousel" id="movies-carousel"></div>
                <button class="carousel-arrow right" onclick="scrollCarousel('movies-carousel', 300)">&#10095;</button>
            </div>
        </section>
        <section class="genre-section" id="series-section">
            <h2>Séries</h2>
            <div class="carousel-container">
                <button class="carousel-arrow left" onclick="scrollCarousel('series-carousel', -300)">&#10094;</button>
                <div class="carousel" id="series-carousel"></div>
                <button class="carousel-arrow right" onclick="scrollCarousel('series-carousel', 300)">&#10095;</button>
            </div>
        </section>
        <section class="genre-section" id="transmissions-section">
            <h2>Transmissões ao Vivo</h2>
            <div class="carousel-container">
                <button class="carousel-arrow left" onclick="scrollCarousel('transmissions-carousel', -300)">&#10094;</button>
                <div class="carousel" id="transmissions-carousel"></div>
                <button class="carousel-arrow right" onclick="scrollCarousel('transmissions-carousel', 300)">&#10095;</button>
            </div>
        </section>
    </main>
    <script>
        // Função para renderizar filmes
        function renderMoviesByGenre(movies) {
            const moviesCarousel = document.getElementById('movies-carousel');
            const seriesCarousel = document.getElementById('series-carousel');
            const transmissionsCarousel = document.getElementById('transmissions-carousel');

            movies.forEach(movie => {
                const movieCard = document.createElement('div');
                movieCard.className = 'movie-card';
                movieCard.innerHTML = `
                    <img src="../Posters/${movie.Poster}" alt="Poster de ${movie.Nome}" class="movie-poster">
                    <div class="movie-info">
                        <h3>${movie.Nome}</h3>
                        <p>${movie.Sinopse}</p>
                        <p><strong>Diretor:</strong> ${movie.Diretor}</p>
                        <p><strong>Duração:</strong> ${movie.Duracao} minutos</p>
                        <p><strong>Ano de lançamento:</strong> ${new Date(movie.DataLancamento).getFullYear()}</p>
                        <p><strong>Produtora:</strong> ${movie.Produtora}</p>
                        <div class="buttons">
                            <button class="watch-button">Assistir</button>
                            <button class="wishlist-button" onclick="adicionarNaLista(${movie.Id})">Adicionar à Lista</button>
                        </div>
                    </div>
                `;

                // Adiciona o card no carrossel correspondente ao gênero
                switch (movie.Genero.toLowerCase()) {
                    case 'filmes':
                        moviesCarousel.appendChild(movieCard);
                        break;
                    case 's├®ries':
                        seriesCarousel.appendChild(movieCard);
                        break;
                    case 'transmiss├úo ao vivo':
                        transmissionsCarousel.appendChild(movieCard);
                        break;
                    default:
                        console.error('Gênero não reconhecido:', movie.Genero);
                }
            });
        }

        // Dados enviados pelo servidor (ejs)
        const movies = <%- JSON.stringify(dados) %>;
        renderMoviesByGenre(movies);

        // Função para deslizar o carrossel
        function scrollCarousel(carouselId, distance) {
            const carousel = document.getElementById(carouselId);
            carousel.scrollBy({
                left: distance,
                behavior: 'smooth'
            });
        }
        document.querySelectorAll('.wishlist-button').forEach(button => {
            button.addEventListener('click', function() {
                this.textContent = 'Na sua lista';
            });
        });

        function adicionarNaLista(filmeId) {
            const userId = localStorage.getItem('userId'); // Obtém o ID do usuário do localStorage

            // Monta a URL com os parâmetros
            const url = `/alugar?clienteId=${userId}&filmeId=${filmeId}`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => {
                if (response.ok) {
                    console.log('Aluguel criado com sucesso!');
                    location.reload(); // Recarrega a página após criar o aluguel
                } else {
                    console.error('Erro ao criar aluguel:', response.statusText);
                    // Tratar erro aqui, se necessário
                }
            })
            .catch(error => {
                console.error('Erro ao criar aluguel:', error);
                // Tratar erro de rede ou outro erro
            });
        }
    </script>
</body>
</html>
